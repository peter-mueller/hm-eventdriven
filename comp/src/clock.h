/*****************************************************************************
* Model: comp.qm
* File:  ./src/clock.h
*
* This code has been generated by QM tool (see state-machine.com/qm).
* DO NOT EDIT THIS FILE MANUALLY. All your changes will be lost.
*
* This program is open source software: you can redistribute it and/or
* modify it under the terms of the GNU General Public License as published
* by the Free Software Foundation.
*
* This program is distributed in the hope that it will be useful, but
* WITHOUT ANY WARRANTY; without even the implied warranty of MERCHANTABILITY
* or FITNESS FOR A PARTICULAR PURPOSE. See the GNU General Public License
* for more details.
*****************************************************************************/
/* @(/3/2) .................................................................*/
#ifndef clock_h
#define clock_h

#include "qp_port.h"
#include "alarm.h"

enum AlarmClockSignals {
    TICK_SIG = Q_USER_SIG, /* time tick event */
    ALARM_SET_SIG,  /* set the alarm */
    ALARM_ON_SIG,   /* turn the alarm on */
    ALARM_OFF_SIG,  /* turn the alarm off */
    ALARM_SIG,  /* alarm event from Alarm component to AlarmClock container */
    CLOCK_12H_SIG,  /* set the clock in 12H mode */
    CLOCK_24H_SIG,  /* set the clock in 24H mode */
    TIME_SIG,       /* time event sent to Alarm (contains current time) */
    TERMINATE_SIG   /* terminate the application */
};

/* @(/1/0) .................................................................*/
typedef struct SetEvtTag {
/* protected: */
    QEvt super;

/* public: */
    uint8_t digit;
} SetEvt;

/* @(/1/1) .................................................................*/
typedef struct TimeEvtTag {
/* protected: */
    QEvt super;

/* public: */
    uint32_t current_time;
} TimeEvt;


extern QActive * const APP_alarmClock;

/* @(/2/3) .................................................................*/
void AlarmClock_ctor(void);
;

/* @(/2/1) .................................................................*/
typedef struct AlarmClockTag {
/* protected: */
    QActive super;

/* private: */
    uint32_t current_time;
    Alarm alarm;

/* public: */
    QTimeEvt timeEvt;
} AlarmClock;

/* protected: */
QState AlarmClock_initial(AlarmClock * const me, QEvt const * const e);
QState AlarmClock_timekeeping(AlarmClock * const me, QEvt const * const e);
QState AlarmClock_mode24h(AlarmClock * const me, QEvt const * const e);
QState AlarmClock_mode12h(AlarmClock * const me, QEvt const * const e);
QState AlarmClock_final(AlarmClock * const me, QEvt const * const e);


#endif /* clock_h */
