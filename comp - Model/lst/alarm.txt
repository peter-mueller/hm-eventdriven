; generated by Component: ARM Compiler 5.04 update 1 (build 49) Tool: ArmCC [5040049]
; commandline ArmCC [--list --debug -c --asm --interleave -o.\obj\alarm.o --asm_dir=.\lst\ --list_dir=.\lst\ --depend=.\obj\alarm.d --apcs=interwork -O0 --diag_suppress=9931 -I.\src -I..\..\..\..\..\..\..\CPU_Platforms\ARM\ARM7\MCB2300\include -I..\..\..\..\..\..\..\Frameworks\Quantum\qpc_5.3.1\qpc\ports\arm7\Keil -I..\..\..\..\..\..\..\Frameworks\Quantum\qpc_5.3.1\qpc\include -IC:\Keil_v5\ARM\RV31\INC -IC:\Keil_v5\ARM\CMSIS\Include -IC:\Keil_v5\ARM\Inc\Philips -D__MICROLIB -DQM_TICK -DQM_ActiveObject --omf_browse=.\obj\alarm.crf src\alarm.c]
                          ARM

                          AREA ||.text||, CODE, READONLY, ALIGN=2

                  Alarm_on PROC
                  |L1.0|
;;;87     /* @(/2/0/2/2) .............................................................*/
;;;88     QState Alarm_on(Alarm * const me, QEvt const * const e) {
000000  e92d41f0          PUSH     {r4-r8,lr}
000004  e1a05000          MOV      r5,r0
000008  e1a06001          MOV      r6,r1
;;;89         QState status_;
;;;90         switch (e->sig) {
00000c  e1d600b0          LDRH     r0,[r6,#0]
000010  e3500001          CMP      r0,#1
000014  0a000006          BEQ      |L1.52|
000018  e3500005          CMP      r0,#5
00001c  0a000010          BEQ      |L1.100|
000020  e3500007          CMP      r0,#7
000024  0a000009          BEQ      |L1.80|
000028  e350000b          CMP      r0,#0xb
00002c  1a00002b          BNE      |L1.224|
000030  ea000010          B        |L1.120|
                  |L1.52|
;;;91             /* @(/2/0/2/2) */
;;;92             case Q_ENTRY_SIG: {
000034  e1a00000          MOV      r0,r0
;;;93                 BSP_showTime24H("*** Alarm ON ",  me->alarm_time, 60U);
000038  e3a0203c          MOV      r2,#0x3c
00003c  e28f0f8a          ADR      r0,|L1.620|
000040  e595100c          LDR      r1,[r5,#0xc]
000044  ebfffffe          BL       BSP_showTime24H
;;;94                 status_ = Q_HANDLED();
000048  e3a04003          MOV      r4,#3
;;;95                 break;
00004c  ea000028          B        |L1.244|
                  |L1.80|
;;;96             }
;;;97             /* @(/2/0/2/2/0) */
;;;98             case ALARM_OFF_SIG: {
000050  e1a00000          MOV      r0,r0
;;;99                 status_ = Q_TRAN(&Alarm_off);
000054  e59f0220          LDR      r0,|L1.636|
000058  e5850008          STR      r0,[r5,#8]
00005c  e3a04008          MOV      r4,#8
;;;100                break;
000060  ea000023          B        |L1.244|
                  |L1.100|
;;;101            }
;;;102            /* @(/2/0/2/2/1) */
;;;103            case ALARM_SET_SIG: {
000064  e1a00000          MOV      r0,r0
;;;104                BSP_showMsg("*** Cannot set Alarm when it is ON");
000068  e28f0e21          ADR      r0,|L1.640|
00006c  ebfffffe          BL       BSP_showMsg
;;;105                status_ = Q_HANDLED();
000070  e3a04003          MOV      r4,#3
;;;106                break;
000074  ea00001e          B        |L1.244|
                  |L1.120|
;;;107            }
;;;108            /* @(/2/0/2/2/2) */
;;;109            case TIME_SIG: {
000078  e1a00000          MOV      r0,r0
;;;110                /* @(/2/0/2/2/2/0) */
;;;111                if (Q_EVT_CAST(TimeEvt)->current_time == me->alarm_time) {
00007c  e5960004          LDR      r0,[r6,#4]
000080  e595100c          LDR      r1,[r5,#0xc]
000084  e1500001          CMP      r0,r1
000088  1a000012          BNE      |L1.216|
;;;112                    BSP_showMsg("ALARM!!!");
00008c  e28f0e21          ADR      r0,|L1.676|
000090  ebfffffe          BL       BSP_showMsg
;;;113    
;;;114                    /* asynchronously post the event to the container AO */
;;;115                    QACTIVE_POST(APP_alarmClock, Q_NEW(QEvt, ALARM_SIG), me);
000094  e3a02008          MOV      r2,#8
000098  e3a01000          MOV      r1,#0
00009c  e3a00004          MOV      r0,#4
0000a0  ebfffffe          BL       QF_newX_
0000a4  e1a07000          MOV      r7,r0
0000a8  e59f0200          LDR      r0,|L1.688|
0000ac  e5900000          LDR      r0,[r0,#0]  ; APP_alarmClock
0000b0  e5900000          LDR      r0,[r0,#0]
0000b4  e3a02000          MOV      r2,#0
0000b8  e1a01007          MOV      r1,r7
0000bc  e590300c          LDR      r3,[r0,#0xc]
0000c0  e59f01e8          LDR      r0,|L1.688|
0000c4  e5900000          LDR      r0,[r0,#0]  ; APP_alarmClock
0000c8  e1a0e00f          MOV      lr,pc
0000cc  e12fff13          BX       r3
;;;116                    status_ = Q_HANDLED();
0000d0  e3a04003          MOV      r4,#3
0000d4  ea000000          B        |L1.220|
                  |L1.216|
;;;117                }
;;;118                else {
;;;119                    status_ = Q_UNHANDLED();
0000d8  e3a04002          MOV      r4,#2
                  |L1.220|
;;;120                }
;;;121                break;
0000dc  ea000004          B        |L1.244|
                  |L1.224|
;;;122            }
;;;123            default: {
0000e0  e1a00000          MOV      r0,r0
;;;124                status_ = Q_SUPER(&QHsm_top);
0000e4  e59f01c8          LDR      r0,|L1.692|
0000e8  e5850008          STR      r0,[r5,#8]
0000ec  e3a04000          MOV      r4,#0
;;;125                break;
0000f0  e1a00000          MOV      r0,r0
                  |L1.244|
0000f4  e1a00000          MOV      r0,r0                 ;95
;;;126            }
;;;127        }
;;;128        return status_;
0000f8  e1a00004          MOV      r0,r4
0000fc  e8bd41f0          POP      {r4-r8,lr}
;;;129    }
000100  e12fff1e          BX       lr
;;;130    
                          ENDP

                  Alarm_off PROC
                  |L1.260|
;;;37     /* @(/2/0/2/1) .............................................................*/
;;;38     QState Alarm_off(Alarm * const me, QEvt const * const e) {
000104  e92d41f0          PUSH     {r4-r8,lr}
000108  e1a04000          MOV      r4,r0
00010c  e1a06001          MOV      r6,r1
;;;39         QState status_;
;;;40         switch (e->sig) {
000110  e1d600b0          LDRH     r0,[r6,#0]
000114  e3500001          CMP      r0,#1
000118  0a000006          BEQ      |L1.312|
00011c  e3500002          CMP      r0,#2
000120  0a000016          BEQ      |L1.384|
000124  e3500005          CMP      r0,#5
000128  0a000038          BEQ      |L1.528|
00012c  e3500006          CMP      r0,#6
000130  1a000044          BNE      |L1.584|
000134  ea00001e          B        |L1.436|
                  |L1.312|
;;;41             /* @(/2/0/2/1) */
;;;42             case Q_ENTRY_SIG: {
000138  e1a00000          MOV      r0,r0
;;;43                 /* while in the off state, the alarm is kept in decimal format */
;;;44                 me->alarm_time = (me->alarm_time/60)*100 + me->alarm_time%60;
00013c  e3a0103c          MOV      r1,#0x3c
000140  e594000c          LDR      r0,[r4,#0xc]
000144  ebfffffe          BL       __aeabi_uidivmod
000148  e1a07001          MOV      r7,r1
00014c  e3a0103c          MOV      r1,#0x3c
000150  e594000c          LDR      r0,[r4,#0xc]
000154  ebfffffe          BL       __aeabi_uidivmod
000158  e0801180          ADD      r1,r0,r0,LSL #3
00015c  e0810200          ADD      r0,r1,r0,LSL #4
000160  e0870100          ADD      r0,r7,r0,LSL #2
000164  e584000c          STR      r0,[r4,#0xc]
;;;45                 BSP_showTime24H("*** Alarm OFF ", me->alarm_time, 100U);
000168  e3a02064          MOV      r2,#0x64
00016c  e28f0f51          ADR      r0,|L1.696|
000170  e594100c          LDR      r1,[r4,#0xc]
000174  ebfffffe          BL       BSP_showTime24H
;;;46                 status_ = Q_HANDLED();
000178  e3a05003          MOV      r5,#3
;;;47                 break;
00017c  ea000036          B        |L1.604|
                  |L1.384|
;;;48             }
;;;49             /* @(/2/0/2/1) */
;;;50             case Q_EXIT_SIG: {
000180  e1a00000          MOV      r0,r0
;;;51                 /* upon exit, the alarm is converted to binary format */
;;;52                 me->alarm_time = (me->alarm_time/100U)*60U + me->alarm_time%100U;
000184  e3a01064          MOV      r1,#0x64
000188  e594000c          LDR      r0,[r4,#0xc]
00018c  ebfffffe          BL       __aeabi_uidivmod
000190  e1a07001          MOV      r7,r1
000194  e3a01064          MOV      r1,#0x64
000198  e594000c          LDR      r0,[r4,#0xc]
00019c  ebfffffe          BL       __aeabi_uidivmod
0001a0  e0600200          RSB      r0,r0,r0,LSL #4
0001a4  e0870100          ADD      r0,r7,r0,LSL #2
0001a8  e584000c          STR      r0,[r4,#0xc]
;;;53                 status_ = Q_HANDLED();
0001ac  e3a05003          MOV      r5,#3
;;;54                 break;
0001b0  ea000029          B        |L1.604|
                  |L1.436|
;;;55             }
;;;56             /* @(/2/0/2/1/0) */
;;;57             case ALARM_ON_SIG: {
0001b4  e1a00000          MOV      r0,r0
;;;58                 /* @(/2/0/2/1/0/0) */
;;;59                 if ((me->alarm_time / 100U < 24U)
0001b8  e3a01064          MOV      r1,#0x64
0001bc  e594000c          LDR      r0,[r4,#0xc]
0001c0  ebfffffe          BL       __aeabi_uidivmod
0001c4  e3500018          CMP      r0,#0x18
0001c8  2a000008          BCS      |L1.496|
;;;60     && (me->alarm_time % 100U < 60U)) {
0001cc  e3a01064          MOV      r1,#0x64
0001d0  e594000c          LDR      r0,[r4,#0xc]
0001d4  ebfffffe          BL       __aeabi_uidivmod
0001d8  e351003c          CMP      r1,#0x3c
0001dc  2a000003          BCS      |L1.496|
;;;61                     status_ = Q_TRAN(&Alarm_on);
0001e0  e24f0f7a          ADR      r0,|L1.0|
0001e4  e5840008          STR      r0,[r4,#8]
0001e8  e3a05008          MOV      r5,#8
0001ec  ea000006          B        |L1.524|
                  |L1.496|
;;;62                 }
;;;63                 /* @(/2/0/2/1/0/1) */
;;;64                 else {
;;;65                     me->alarm_time = 0U;
0001f0  e3a00000          MOV      r0,#0
0001f4  e584000c          STR      r0,[r4,#0xc]
;;;66                     BSP_showTime24H("*** Alarm reset", me->alarm_time, 100U);
0001f8  e3a02064          MOV      r2,#0x64
0001fc  e28f00c4          ADR      r0,|L1.712|
000200  e594100c          LDR      r1,[r4,#0xc]
000204  ebfffffe          BL       BSP_showTime24H
;;;67                     status_ = Q_HANDLED();
000208  e3a05003          MOV      r5,#3
                  |L1.524|
;;;68                 }
;;;69                 break;
00020c  ea000012          B        |L1.604|
                  |L1.528|
;;;70             }
;;;71             /* @(/2/0/2/1/1) */
;;;72             case ALARM_SET_SIG: {
000210  e1a00000          MOV      r0,r0
;;;73                 /* while setting, the alarm is kept in decimal format */
;;;74                 me->alarm_time = (10U * me->alarm_time
000214  e5d61004          LDRB     r1,[r6,#4]
000218  e3a0300a          MOV      r3,#0xa
00021c  e594200c          LDR      r2,[r4,#0xc]
000220  e0201293          MLA      r0,r3,r2,r1
000224  e59f10ac          LDR      r1,|L1.728|
000228  ebfffffe          BL       __aeabi_uidivmod
00022c  e584100c          STR      r1,[r4,#0xc]
;;;75                                   + ((SetEvt const *)e)->digit) % 10000U;
;;;76                 BSP_showTime24H("*** Alarm reset ",  me->alarm_time, 100U);
000230  e3a02064          MOV      r2,#0x64
000234  e28f00a0          ADR      r0,|L1.732|
000238  e594100c          LDR      r1,[r4,#0xc]
00023c  ebfffffe          BL       BSP_showTime24H
;;;77                 status_ = Q_HANDLED();
000240  e3a05003          MOV      r5,#3
;;;78                 break;
000244  ea000004          B        |L1.604|
                  |L1.584|
;;;79             }
;;;80             default: {
000248  e1a00000          MOV      r0,r0
;;;81                 status_ = Q_SUPER(&QHsm_top);
00024c  e59f0060          LDR      r0,|L1.692|
000250  e5840008          STR      r0,[r4,#8]
000254  e3a05000          MOV      r5,#0
;;;82                 break;
000258  e1a00000          MOV      r0,r0
                  |L1.604|
00025c  e1a00000          MOV      r0,r0                 ;47
;;;83             }
;;;84         }
;;;85         return status_;
000260  e1a00005          MOV      r0,r5
000264  e8bd41f0          POP      {r4-r8,lr}
;;;86     }
000268  e12fff1e          BX       lr
                  |L1.620|
00026c  2a2a2a20          DCB      "*** Alarm ON ",0
000270  416c6172
000274  6d204f4e
000278  2000    
00027a  00                DCB      0
00027b  00                DCB      0
                  |L1.636|
                          DCD      Alarm_off
                  |L1.640|
000280  2a2a2a20          DCB      "*** Cannot set Alarm when it is ON",0
000284  43616e6e
000288  6f742073
00028c  65742041
000290  6c61726d
000294  20776865
000298  6e206974
00029c  20697320
0002a0  4f4e00  
0002a3  00                DCB      0
                  |L1.676|
0002a4  414c4152          DCB      "ALARM!!!",0
0002a8  4d212121
0002ac  00      
0002ad  00                DCB      0
0002ae  00                DCB      0
0002af  00                DCB      0
                  |L1.688|
                          DCD      APP_alarmClock
                  |L1.692|
                          DCD      QHsm_top
                  |L1.696|
0002b8  2a2a2a20          DCB      "*** Alarm OFF ",0
0002bc  416c6172
0002c0  6d204f46
0002c4  462000  
0002c7  00                DCB      0
                  |L1.712|
0002c8  2a2a2a20          DCB      "*** Alarm reset",0
0002cc  416c6172
0002d0  6d207265
0002d4  73657400
                  |L1.728|
                          DCD      0x00002710
                  |L1.732|
0002dc  2a2a2a20          DCB      "*** Alarm reset ",0
0002e0  416c6172
0002e4  6d207265
0002e8  73657420
0002ec  00      
0002ed  00                DCB      0
0002ee  00                DCB      0
0002ef  00                DCB      0
                          ENDP

                  Alarm_initial PROC
                  |L1.752|
;;;31     /* @(/2/0/2/0) */
;;;32     QState Alarm_initial(Alarm * const me, QEvt const * const e) {
0002f0  e1a02000          MOV      r2,r0
;;;33         me->alarm_time = 12U*60U;
0002f4  e3a00e2d          MOV      r0,#0x2d0
0002f8  e582000c          STR      r0,[r2,#0xc]
;;;34         (void)e; /* avoid compiler warning about unused parameter */
;;;35         return Q_TRAN(&Alarm_off);
0002fc  e24f0c02          ADR      r0,|L1.260|
000300  e5820008          STR      r0,[r2,#8]
000304  e3a00008          MOV      r0,#8
;;;36     }
000308  e12fff1e          BX       lr
;;;37     /* @(/2/0/2/1) .............................................................*/
                          ENDP

                  Alarm_ctor PROC
;;;26     /* @(/2/0/1) ...............................................................*/
;;;27     void Alarm_ctor(Alarm * const me) {
00030c  e92d4010          PUSH     {r4,lr}
000310  e1a04000          MOV      r4,r0
;;;28         QHsm_ctor(&me->super, Q_STATE_CAST(&Alarm_initial));
000314  e24f102c          ADR      r1,|L1.752|
000318  e1a00004          MOV      r0,r4
00031c  ebfffffe          BL       QHsm_ctor
;;;29     }
000320  e8bd4010          POP      {r4,lr}
000324  e12fff1e          BX       lr
;;;30     /* @(/2/0/2) ...............................................................*/
                          ENDP


                          AREA ||.constdata||, DATA, READONLY, ALIGN=0

                  Q_this_module_
000000  7372635c          DCB      0x73,0x72,0x63,0x5c
000004  616c6172          DCB      0x61,0x6c,0x61,0x72
000008  6d2e6300          DCB      0x6d,0x2e,0x63,0x00
